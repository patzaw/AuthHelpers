% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/create_azure_device_credentials.R
\name{create_azure_device_credentials}
\alias{create_azure_device_credentials}
\title{Create an object for facilitating the management of azure tokens}
\usage{
create_azure_device_credentials(
  resource,
  tenant,
  app,
  version = 2,
  offline_access = TRUE
)
}
\arguments{
\item{resource}{See the corresponding
argument for \link[AzureAuth:get_azure_token]{AzureAuth::get_azure_token}}

\item{tenant}{resource See the corresponding
argument for \link[AzureAuth:get_azure_token]{AzureAuth::get_azure_token}}

\item{app}{resource See the corresponding
argument for \link[AzureAuth:get_azure_token]{AzureAuth::get_azure_token}}

\item{version}{resource See the corresponding
argument for \link[AzureAuth:get_azure_token]{AzureAuth::get_azure_token} (default: 2)}

\item{offline_access}{Set to TRUE (default) to allow refreshing the token
without authenticating again}
}
\value{
A list with the following functions to manage embedded credentials
and token (see examples):
\itemize{
\item \code{get_setup()}: get initial azure token setup (params of this function)
\item \code{update_creds()}: update the credentials (mainly the user and device codes)
\item \code{get_user_code()}: get the user code to paste in the corresponding field
at the verification URL
\item \code{get_verification_uri()}: get the verification URL where the user code
can be pasted
\item \code{browse_verification_uri()}: got the verification URL where the user
code can be pasted (open a new browser tab or window)
\item \code{request_token(timeout=15)}: request the token. It should be called after
having pasted the user code at the verification URL and followed the
procedure for authenticating there. After a default timeout of 15 seconds,
the request is cancelled.
\item \code{is_valid()}: Check if the token is valid
\item \code{refresh_token(always=FALSE)}: Refresh the token without re-authenticating.
If always=FALSE (default), the token is only refreshed if it is not valid
anymore.
\item \code{get_token()}: Get the full \link[AzureAuth:AzureToken]{AzureAuth::AzureTokenDeviceCode} object
\item \code{get_access_token()}: Get the access token string
}
}
\description{
Create an object for facilitating the management of azure tokens
}
\examples{
\dontrun{
## Get the initial credentials
device_credentials <- create_azure_device_credentials(
   resource=c("myresource"),
   tenant="mytenant",
   app="myapp"
)

## The following line can be used to update the code if needed
# device_credentials$update_creds()

## Print the user code and go to the verification URL
device_credentials$get_user_code()
device_credentials$browse_verification_uri()

## After authenticating, request the token (default timeout: 15 seconds)
device_credentials$request_token()

## Verify the validity of the token and get it
device_credentials$is_valid()
device_credentials$get_token()
device_credentials$get_access_token()

## The following lines can be used to save the token in a file
# saveRDS(device_credentials, file="~/etc/mytoken.rds", compress=FALSE)
# device_credentials <- readRDS("~/etc/mytoken.rds")

## The token can be refreshed if not valid anymore
# device_credentials$refresh_token()
}

}
